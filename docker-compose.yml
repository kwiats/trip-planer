x-django: &django
    build:
        context: ./backend
        dockerfile: ./docker/django/Dockerfile
    container_name: backend
    stdin_open: true
    tty: true
    depends_on: [postgres, minio]
    env_file:
        - .env
        - .env.development.local
    ports:
        - "8000:8000"
    volumes:
        - ./backend/src:/app/src
    healthcheck:
        test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
        interval: 30s
        timeout: 20s
        retries: 3

services:
    postgres:
        container_name: postgres-triplane
        image: postgis/postgis:14-3.1
        hostname: postgres
        ports:
            - "5432:5432"
            - "5433:5432"
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: triplane
            POSTGRES_DB: postgres-triplane
            USE_GEOS: 1
            USE_PROJ: 1
            USE_STATS: 1
        volumes:
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: [ "CMD", "pg_isready", "-U", "postgres" ]
            interval: 30s
            timeout: 20s
            retries: 3

    minio:
        container_name: minio
        image: minio/minio:latest
        ports:
            - "9000:9000"
            - "9001:9001"
        volumes:
            - minio_data:/data
        environment:
            MINIO_ROOT_USER: superuser
            MINIO_ROOT_PASSWORD: superuser
        command: server /data --console-address ":9001"
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
            interval: 30s
            timeout: 20s
            retries: 3

    minio-create-buckets:
        image: minio/mc:latest
        entrypoint: >
            /bin/sh -c '
            mc alias set s3 http://minio:9000 superuser superuser;
            mc ls s3/files || mc mb s3/files;
            mc anonymous set public s3/files;
            exit 0;
            '

    django:
        <<: *django
        profiles: ["dev"]

    localstack:
        image: localstack/localstack:latest
        container_name: localstack
        ports:
            - "4566:4566"
        environment:
            - SERVICES=s3
            - DEBUG=1
            - DEFAULT_REGION=us-east-1
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:4566/health"]
            interval: 5s
            timeout: 10s
            retries: 5

    test:
        <<: *django
        build:
            context: ./backend
            dockerfile: ./docker/test/Dockerfile
        container_name: test
        ports:
            -   "8001:8000"
        depends_on: [postgres, localstack]
        env_file:
            - .env.testing.local
        profiles: ["test"]

#    redis:
#        image: redis
#        container_name: redis
#        build:
#            context: ./backend/docker/redis
#            dockerfile: Dockerfile
#        privileged: true
#        env_file:
#            - ./backend/.env
#            - ./backend/.env.local
#        ports:
#            - "6379:6379"
#        volumes:
#            - redis_data:/data:rw
#        healthcheck:
#            test: redis-cli ping
#            interval: 3s
#            timeout: 5s
#            retries: 5
#        profiles: ["dev", "redis", "dev-less"]

volumes:
    postgres_data:
    minio_data:

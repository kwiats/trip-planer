services:
    postgres:
        container_name: postgres-triplane
#        image: postgres:14.6
        image: postgis/postgis:14-3.1
        hostname: postgres
        ports:
            - "5432:5432"
            - "5433:5432"
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: triplane
            POSTGRES_DB: postgres-triplane
            USE_GEOS: 1
            USE_PROJ: 1
            USE_STATS: 1
        volumes:
            - postgres_data:/var/lib/postgresql/data
        profiles: ["dev"]
        healthcheck:
            test: [ "CMD", "pg_isready", "-U", "postgres" ]
            interval: 30s
            timeout: 20s
            retries: 3

    minio:
        container_name: minio
        image: minio/minio:latest
        ports:
            - "9000:9000"
            - "9001:9001"
        volumes:
            - minio_data:/data
        environment:
            MINIO_ROOT_USER: superuser
            MINIO_ROOT_PASSWORD: superuser
        command: server /data --console-address ":9001"
        profiles: ["dev"]
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
            interval: 30s
            timeout: 20s
            retries: 3

    minio-create-buckets:
        image: minio/mc:latest
        entrypoint: >
            /bin/sh -c '
            mc alias set s3 http://minio:9000 superuser superuser;
            mc ls s3/files || mc mb s3/files;
            mc anonymous set public s3/files;
            exit 0;
            '
        depends_on:
            - minio

    django:
        build:
            context: ./backend
            dockerfile: ./docker/django/Dockerfile
        container_name: backend
        stdin_open: true
        tty: true
        depends_on: [postgres, minio, minio-create-buckets]
        env_file:
            - ./backend/.env
            - ./backend/.env.local
        ports:
            - "8000:8000"
        volumes:
            - ./backend/src:/app/src
        profiles: ["dev"]
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
            interval: 30s
            timeout: 20s
            retries: 3

volumes:
    postgres_data:
    minio_data: